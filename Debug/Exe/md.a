;//початок Налаштування
;#define DEAD_TIME_HALF      2   //Мертвий час (1 = 0.26 мкс)
;#define ACCELERATION        40  //Прискорення  (Гц/сек)
;#define NORM_VOLTAGE        512 // Нормальне значення робочої напруги в одиницях АЦП (Макс:1023)
;#define MAX_BRAKE_VOLTAGE   562 // Максимальне допустипе значення напруги при гальмуванні в одиницях АЦП (Макс:1023)
;#define CRYTYCAL_VOLTAGE    594 // Критичне значення напруги в одиницях АЦП (Макс:1023)
;#define BRAKE_PERIOD        2 // Період гальмування двигуна (1/2 сек)
;#define NORM_TEMP_DRIVER    200 // Нормальне значення температури драйвера в одиницях АЦП (Макс:1023)
;#define MAX_TEMP_DRIVER     300 // Максимальне допустипе значення температури драйвера в одиницях АЦП (Макс:1023)
;
;
;//Кінець налаштувань
;
;
;#define SINE_TABLE_LENGTH   66 // Кількість значень в таблиці синусів
;#define HALF_ST_LENGTH      33 // Кількість значень в таблиці синусів для напівперіода
;
;#define DIRECTION_FORWARD       0 // Константа руху вперед
;#define DIRECTION_REVERSE       1 // Константа руху назад
;
;#define MODE_STOP      0 // режим "Зупинений"
;#define MODE_RUN       1 // режим "Робота"
;#define MODE_BRAKE     2 // режим "Гальмування"
;
;#define ERROR_NO            0 // Помилки відчсутні
;#define ERROR_POWER         1 // Відсутність живлення
;#define ERROR_OVERVOLTAGE   2 // Перенапруга на конденсаторі
;#define ERROR_OVERLOAD      3 // Перевантаження по струму
;#define ERROR_DRIVERTEMP    4 // Перегрів драйвера
;#define ERROR_MOTORTEMP     5 // Перегрів Двигуна
;
;// Роспіновка
;#define FORWARD_BUT     PIND.1  //  Кнопка запуску вперед
;#define STOP_BUT        PIND.0  //  Кнопка зупинки
;#define REVERSE_BUT     PINC.0  //  Кнопка запуску назад
;
;#define POWER_SENS      PIND.2  // Пропажа сети - нормальное состояние лог.0, при лог.1 - сделать стоп привода, после по ...
;#define CAP_VOLTAGE     3       //ADC3 - пренапряжение силовой части ( больше +340В).С силового конденсатора через делит ...
;#define DRIVER_TEMP     4       //ADC4 - измерение перегрева силовой части. Согласно таблицам расчитать работы терморези ...
;#define FREQUENCY_ADC   7       //ADC7 - регулировка частоты
;#define NORMAL_LED      PORTC.1 // - светодиод индикации работы - начинает гореть спустя 4 секунды после (включения PD2) ...
;#define ERROR_LED       PORTC.2 // - светодиод индикации аварии
;#define OVER_LOAD       PINB.4  // - сверхток - лог.0 (подтянут через 10К к 5В) - при подаче лог.0 на этот вывод - резко ...
;#define OVER_MOTORTEMP  PIND.4  // - Перегрев двигателя - нормальное состояние лог.0 при появлении лог.1. сделать стоп п ...
;
;
;#include <mega48.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $00000009 VOL: 0
	#endif
;PCODE: $0000000A VOL: 0
;PCODE: $0000000B VOL: 0
;#include <md.h>
;#include <delay.h>
;
;// Declare your global variables here
;volatile int out_cnt=0; // Лічильник імпульсів зовнішнього генератора
;char p1l=0xFF,p1h=0x00,p2l=0xFF,p2h=0x00,p3l=0xFF,p3h=0x00; //Буфер для значень PWM
;char sys_timer_cnt=0;// Лічильник системного таймера
;// External Interrupt 0 service routine
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 0039 {

	.CSEG
;PCODE: $0000000C VOL: 0
;PCODE: $0000000D VOL: 0
; 0000 003A     out_cnt++;
;PCODE: $0000000E VOL: 1
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 003B }
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 003F {
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0040     OCR0A=p1h;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0041     OCR0B=p1l;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0042     OCR1AL=p2h;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0043     OCR1BL=p2l;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0044     OCR2A=p3h;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0045     OCR2B=p3l;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0046     sys_timer_cnt++;
;PCODE: $00000023 VOL: 0
; 0000 0047 }
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;
;// Voltage Reference: AVCC pin
;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (0<<ADLAR))
;
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input)
; 0000 004E {
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 004F ADMUX=adc_input | ADC_VREF_TYPE;
;PCODE: $00000029 VOL: 0
;	adc_input -> Y+0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0050 // Delay needed for the stabilization of the ADC input voltage
; 0000 0051 delay_us(10);
;PCODE: $0000002D VOL: 0
; 0000 0052 // Start the AD conversion
; 0000 0053 ADCSRA|=(1<<ADSC);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0054 // Wait for the AD conversion to complete
; 0000 0055 while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0056 ADCSRA|=(1<<ADIF);
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0057 return ADCW;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0058 }
;PCODE: $0000003D VOL: 0
;
;void main(void)
; 0000 005B {
;PCODE: $0000003E VOL: 0
; 0000 005C volatile char tmp=0,tmpsin=0,tmptabpos=0,tmptabpos2=0;// Cлужбові
; 0000 005D volatile char mode=0; //Режим роботи пристрою (0-стоп, 1-Робота, 2-Гальмування)
; 0000 005E bit direct=0; // Напрям руху (0-вперед, 1-назад)
; 0000 005F volatile int cur_period=0; // Поточний період для синусоїди
; 0000 0060 volatile char sinU=0,sinV=22,sinW=44; // Початкові значення здвигу по таблиці синусів
; 0000 0061 volatile signed char h_sin[SINE_TABLE_LENGTH],l_sin[SINE_TABLE_LENGTH]; // Поточна таблиця синусів
; 0000 0062 volatile char cur_freq=0;// діюча частота двигуна
; 0000 0063 volatile char freq=0;// встановлена частота двигуна
; 0000 0064 volatile char calc_sine_cnt=0;// Кількість прорахованих значень синуса
; 0000 0065 volatile char amp_freq=0;// Частота для виборуамплітуди
; 0000 0066 char accel_cnt=0;// Лічильник прискорення
; 0000 0067 char brake_cnt=0;// Лічильник гальмування
; 0000 0068 char error_led_cnt=0; // Лічильник індикації помилки
; 0000 0069 char error_led_period=0; // Період індикації помилки
; 0000 006A char error=0; // Помилка
; 0000 006B char slow_timer_cnt=0; // таймер для не критичних процесів
; 0000 006C #pragma optsize-
; 0000 006D CLKPR=(1<<CLKPCE);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;	tmp -> Y+145
;	tmpsin -> Y+144
;	tmptabpos -> Y+143
;	tmptabpos2 -> Y+142
;	mode -> Y+141
;	direct -> R15.0
;	cur_period -> Y+139
;	sinU -> Y+138
;	sinV -> Y+137
;	sinW -> Y+136
;	h_sin -> Y+70
;	l_sin -> Y+4
;	cur_freq -> Y+3
;	freq -> Y+2
;	calc_sine_cnt -> Y+1
;	amp_freq -> Y+0
;	accel_cnt -> R17
;	brake_cnt -> R16
;	error_led_cnt -> R19
;	error_led_period -> R18
;	error -> R21
;	slow_timer_cnt -> R20
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 006E CLKPR=(0<<CLKPCE) | (0<<CLKPS3) | (0<<CLKPS2) | (0<<CLKPS1) | (0<<CLKPS0);
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 006F #ifdef _OPTIMIZE_SIZE_
; 0000 0070 #pragma optsize+
; 0000 0071 #endif
; 0000 0072 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (0<<DDB0);
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0073 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0074 DDRC=(0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (1<<DDC2) | (1<<DDC1) | (0<<DDC0);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0075 PORTC=(0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0076 DDRD=(0<<DDD7) | (1<<DDD6) | (1<<DDD5) | (0<<DDD4) | (1<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0077 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0078 TCCR0A=(1<<COM0A1) | (0<<COM0A0) | (1<<COM0B1) | (1<<COM0B0) | (0<<WGM01) | (1<<WGM00);
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0079 TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (1<<CS00);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 007A TCNT0=0x00;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 007B OCR0A=0x00;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 007C OCR0B=0x00;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 007D TCCR1A=(1<<COM1A1) | (0<<COM1A0) | (1<<COM1B1) | (1<<COM1B0) | (0<<WGM11) | (1<<WGM10);
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 007E TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 007F TCNT1H=0x00;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0080 TCNT1L=0x00;
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0081 ICR1H=0x00;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0082 ICR1L=0x00;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0083 OCR1AH=0x00;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0084 OCR1AL=0x00;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0085 OCR1BH=0x00;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0086 OCR1BL=0x00;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0087 ASSR=(0<<EXCLK) | (0<<AS2);
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0088 TCCR2A=(1<<COM2A1) | (0<<COM2A0) | (1<<COM2B1) | (1<<COM2B0) | (0<<WGM21) | (1<<WGM20);
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0089 TCCR2B=(0<<WGM22) | (0<<CS22) | (0<<CS21) | (1<<CS20);
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 008A TCNT2=0x00;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 008B OCR2A=0x00;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 008C OCR2B=0x00;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 008D TIMSK0=(0<<OCIE0B) | (0<<OCIE0A) | (1<<TOIE0);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 008E TIMSK1=(0<<ICIE1) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1);
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 008F TIMSK2=(0<<OCIE2B) | (0<<OCIE2A) | (0<<TOIE2);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0090 EICRA=(0<<ISC11) | (0<<ISC10) | (1<<ISC01) | (0<<ISC00);
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0091 EIMSK=(0<<INT1) | (1<<INT0);
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0092 EIFR=(0<<INTF1) | (1<<INTF0);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0093 PCICR=(0<<PCIE2) | (0<<PCIE1) | (0<<PCIE0);
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0094 UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (0<<RXEN0) | (0<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0095 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0096 DIDR1=(0<<AIN0D) | (0<<AIN1D);
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0097 DIDR0=(0<<ADC5D) | (0<<ADC4D) | (0<<ADC3D) | (0<<ADC2D) | (0<<ADC1D) | (0<<ADC0D);
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0098 ADMUX=ADC_VREF_TYPE;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0099 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 009A ADCSRB=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 009B SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 009C TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 009D 
; 0000 009E for (tmp=0;tmp<SINE_TABLE_LENGTH;tmp++)
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 009F  {
; 0000 00A0     if (tmp<HALF_ST_LENGTH)
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 00A1     {
; 0000 00A2 
; 0000 00A3         tmpsin=127+sineTable[0][tmptabpos];
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 00A4         tmptabpos++;
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 00A5     }
; 0000 00A6     else
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 00A7     {
; 0000 00A8        tmpsin=127-sineTable[0][tmptabpos2];
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 00A9        tmptabpos2++;
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 00AA     }
;PCODE: $000000D0 VOL: 0
; 0000 00AB 
; 0000 00AC     if (tmpsin <= DEAD_TIME_HALF)
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 00AD     {
; 0000 00AE         h_sin[tmp] = 0x00;
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 00AF         l_sin[tmp] = tmpsin;
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 00B0     }
; 0000 00B1     else if (tmpsin >= (0xff - DEAD_TIME_HALF))
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 00B2     {
; 0000 00B3         h_sin[tmp] = 0xff - (2 * DEAD_TIME_HALF);
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 00B4         l_sin[tmp] = 0xff;
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 00B5     }
; 0000 00B6     else
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 00B7     {
; 0000 00B8         h_sin[tmp] = tmpsin - DEAD_TIME_HALF;
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 00B9         l_sin[tmp] = tmpsin + DEAD_TIME_HALF;
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 00BA     }
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 00BB  }
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 00BC  tmptabpos2=0;
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 00BD  tmptabpos=0;
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 00BE cur_period=period_table[1];
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 00BF mode=1;
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 00C0 freq=60;
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 00C1 // Global enable interrupts
; 0000 00C2 #asm("sei")
;PCODE: $00000116 VOL: 0
	sei
;PCODE: $00000117 VOL: 0
; 0000 00C3 
; 0000 00C4 while (1)
;PCODE: $00000118 VOL: 0
; 0000 00C5 {
; 0000 00C6     tmpsin=3;
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 00C7     if (out_cnt>cur_period)
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 1
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 00C8     {
; 0000 00C9         out_cnt=0;
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 1
; 0000 00CA         if (mode>0 )
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 00CB         {
; 0000 00CC             sinU++;
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 00CD             sinV++;
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 00CE             sinW++;
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 00CF             if (sinU==SINE_TABLE_LENGTH) sinU=0;
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 00D0             if (sinV==SINE_TABLE_LENGTH) sinV=0;
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 00D1             if (sinW==SINE_TABLE_LENGTH) sinW=0;
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 00D2             p1h = h_sin[sinU];
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 00D3             p1l = l_sin[sinU];
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 00D4             if (direct == DIRECTION_FORWARD)
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 00D5             {
; 0000 00D6                 p2h = h_sin[sinW];
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 00D7                 p2l = l_sin[sinW];
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 00D8                 p3h = h_sin[sinV];
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 00D9                 p3l = l_sin[sinV];
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 00DA             }
; 0000 00DB             else
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 00DC             {
; 0000 00DD                 p2h = h_sin[sinV];
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 00DE                 p2l = l_sin[sinV];
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 00DF                 p3h = h_sin[sinW];
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 00E0                 p3l = l_sin[sinW];
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 00E1             }
;PCODE: $00000179 VOL: 0
; 0000 00E2             NORMAL_LED=!NORMAL_LED;
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 00E3             NORMAL_LED=!NORMAL_LED;
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 00E4         }
; 0000 00E5         else
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0000 00E6         {
; 0000 00E7             p1l=0xFF; p1h=0x00; p2l=0xFF; p2h=0x00; p3l=0xFF; p3h=0x00;
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 00E8         }
;PCODE: $00000199 VOL: 0
; 0000 00E9         if (calc_sine_cnt<=SINE_TABLE_LENGTH)
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 00EA         {
; 0000 00EB             amp_freq=cur_freq-1;
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0000 00EC             if (amp_freq>49) amp_freq=49;
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 00ED             calc_sine_cnt++;
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0000 00EE             if (sinU<HALF_ST_LENGTH)
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 00EF             {
; 0000 00F0 
; 0000 00F1                 tmpsin=127+sineTable[amp_freq][tmptabpos];
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
; 0000 00F2                 tmptabpos++;
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
; 0000 00F3                 tmptabpos2=0;
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 00F4             }
; 0000 00F5             else
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0000 00F6             {
; 0000 00F7                tmpsin=127-sineTable[amp_freq][tmptabpos2];
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0000 00F8                tmptabpos2++;
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 00F9                tmptabpos=0;
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
; 0000 00FA             }
;PCODE: $000001D1 VOL: 0
; 0000 00FB 
; 0000 00FC             if (tmpsin <= DEAD_TIME_HALF)
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0000 00FD             {
; 0000 00FE                 h_sin[sinU] = 0x00;
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0000 00FF                 l_sin[sinU] = tmpsin;
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
; 0000 0100             }
; 0000 0101             else if (tmpsin >= (0xff - DEAD_TIME_HALF))
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
; 0000 0102             {
; 0000 0103                 h_sin[sinU] = 0xff - (2 * DEAD_TIME_HALF);
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
; 0000 0104                 l_sin[sinU] = 0xff;
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0000 0105             }
; 0000 0106             else
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
; 0000 0107             {
; 0000 0108                 h_sin[sinU] = tmpsin - DEAD_TIME_HALF;
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
; 0000 0109                 l_sin[sinU] = tmpsin + DEAD_TIME_HALF;
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
; 0000 010A             }
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
; 0000 010B         }
; 0000 010C 
; 0000 010D     }
;PCODE: $00000204 VOL: 0
; 0000 010E     else
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
; 0000 010F     {
; 0000 0110         if (sys_timer_cnt>138)
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0000 0111         {
; 0000 0112             sys_timer_cnt=0;
;PCODE: $0000020A VOL: 0
; 0000 0113             if (mode>0)
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
; 0000 0114             {
; 0000 0115                 if(cur_freq<freq || cur_freq>freq)
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
; 0000 0116                 {
; 0000 0117                     accel_cnt=accel_cnt+ACCELERATION;
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
; 0000 0118                     if (accel_cnt>99)
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0000 0119                     {
; 0000 011A                         accel_cnt=0;
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 011B                         if (cur_freq<freq) {cur_freq++;} else {cur_freq--;}
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
; 0000 011C                         cur_period=period_table[cur_freq];
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0000 011D                         if (cur_freq<51) calc_sine_cnt=0;
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
; 0000 011E                     }
;PCODE: $00000238 VOL: 0
; 0000 011F                 }
;PCODE: $00000239 VOL: 0
; 0000 0120             }
;PCODE: $0000023A VOL: 0
; 0000 0121             else
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
; 0000 0122             {
; 0000 0123                 if (error>0)
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
; 0000 0124                 {
; 0000 0125                      error_led_cnt++;
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
; 0000 0126                      if (error_led_cnt>error_led_period)
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
; 0000 0127                      {
; 0000 0128                         //ERROR_LED=!ERROR_LED;
; 0000 0129                         error_led_cnt=0;
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
; 0000 012A                      }
; 0000 012B                 }
;PCODE: $00000247 VOL: 0
; 0000 012C                 else
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
; 0000 012D                 {
; 0000 012E                     //if(REVERSE_BUT==0) {mode=MODE_RUN;direct=DIRECTION_REVERSE;}
; 0000 012F                     //if(FORWARD_BUT==0) {mode=MODE_RUN;direct=DIRECTION_FORWARD;}
; 0000 0130                     //  NORMAL_LED=1;
; 0000 0131                 }
;PCODE: $0000024A VOL: 0
; 0000 0132             }
;PCODE: $0000024B VOL: 0
; 0000 0133             if(STOP_BUT==0)
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
; 0000 0134             {
; 0000 0135                 if (mode==MODE_STOP)
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
; 0000 0136                 {
; 0000 0137                     //overload_state=0;
; 0000 0138                     //crytycal_voltage=0;
; 0000 0139                 }
; 0000 013A                 else
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
; 0000 013B                 {
; 0000 013C                    // mode=MODE_BRAKE;
; 0000 013D                 }
;PCODE: $00000254 VOL: 0
; 0000 013E             }
; 0000 013F             slow_timer_cnt++;
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
; 0000 0140             if (slow_timer_cnt==50)
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
; 0000 0141             {
; 0000 0142                 slow_timer_cnt=0;
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
; 0000 0143                 if (mode==MODE_BRAKE)
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
; 0000 0144                 {
; 0000 0145                     freq=1;
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
; 0000 0146                     if (cur_freq==1)  brake_cnt++;
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
; 0000 0147 
; 0000 0148                     if (brake_cnt>BRAKE_PERIOD) {brake_cnt=0;mode=MODE_STOP;}
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
; 0000 0149                 }
;PCODE: $0000026F VOL: 0
; 0000 014A                 else
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
; 0000 014B                 {
; 0000 014C                    // freq=read_adc(FREQUENCY_ADC)/17+1;
; 0000 014D                 }
;PCODE: $00000272 VOL: 0
; 0000 014E             }
; 0000 014F         }
;PCODE: $00000273 VOL: 0
; 0000 0150     }
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
; 0000 0151 }
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
; 0000 0152 }
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
