;#include <mega48.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $00000009 VOL: 0
	#endif
;PCODE: $0000000A VOL: 0
;PCODE: $0000000B VOL: 0
;
;// Declare your global variables here
;
;// External Interrupt 0 service routine
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 0007 {

	.CSEG
;PCODE: $0000000C VOL: 0
;PCODE: $0000000D VOL: 0
; 0000 0008 // Place your code here
; 0000 0009 PORTB.0=!PORTB.0;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 000A }
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;
;void main(void)
; 0000 000D {
;PCODE: $0000001B VOL: 0
; 0000 000E // Declare your local variables here
; 0000 000F 
; 0000 0010 // Crystal Oscillator division factor: 1
; 0000 0011 #pragma optsize-
; 0000 0012 CLKPR=(1<<CLKPCE);
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0013 CLKPR=(0<<CLKPCE) | (0<<CLKPS3) | (0<<CLKPS2) | (0<<CLKPS1) | (0<<CLKPS0);
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0014 #ifdef _OPTIMIZE_SIZE_
; 0000 0015 #pragma optsize+
; 0000 0016 #endif
; 0000 0017 
; 0000 0018 // Input/Output Ports initialization
; 0000 0019 // Port B initialization
; 0000 001A // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=Out Bit2=In Bit1=In Bit0=Out
; 0000 001B DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (1<<DDB3) | (0<<DDB2) | (0<<DDB1) | (1<<DDB0);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 001C // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=0 Bit2=T Bit1=T Bit0=0
; 0000 001D PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 001E 
; 0000 001F // Port C initialization
; 0000 0020 // Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0021 DDRC=(0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0022 // State: Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0023 PORTC=(0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0024 
; 0000 0025 // Port D initialization
; 0000 0026 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=Out Bit2=In Bit1=In Bit0=In
; 0000 0027 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (1<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0028 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=0 Bit2=T Bit1=T Bit0=T
; 0000 0029 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 002A 
; 0000 002B // Timer/Counter 0 initialization
; 0000 002C // Clock source: System Clock
; 0000 002D // Clock value: 8000,000 kHz
; 0000 002E // Mode: Phase correct PWM top=0xFF
; 0000 002F // OC0A output: Disconnected
; 0000 0030 // OC0B output: Disconnected
; 0000 0031 // Timer Period: 0,06375 ms
; 0000 0032 TCCR0A=(0<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (1<<WGM00);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0033 TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (1<<CS00);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0034 TCNT0=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0035 OCR0A=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0036 OCR0B=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0037 
; 0000 0038 // Timer/Counter 1 initialization
; 0000 0039 // Clock source: System Clock
; 0000 003A // Clock value: 8000,000 kHz
; 0000 003B // Mode: Ph. correct PWM top=0x00FF
; 0000 003C // OC1A output: Disconnected
; 0000 003D // OC1B output: Disconnected
; 0000 003E // Noise Canceler: Off
; 0000 003F // Input Capture on Falling Edge
; 0000 0040 // Timer Period: 0,06375 ms
; 0000 0041 // Timer1 Overflow Interrupt: Off
; 0000 0042 // Input Capture Interrupt: Off
; 0000 0043 // Compare A Match Interrupt: Off
; 0000 0044 // Compare B Match Interrupt: Off
; 0000 0045 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (1<<WGM10);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0046 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0047 TCNT1H=0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0048 TCNT1L=0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0049 ICR1H=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 004A ICR1L=0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 004B OCR1AH=0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 004C OCR1AL=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 004D OCR1BH=0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 004E OCR1BL=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 004F 
; 0000 0050 // Timer/Counter 2 initialization
; 0000 0051 // Clock source: System Clock
; 0000 0052 // Clock value: 8000,000 kHz
; 0000 0053 // Mode: Phase correct PWM top=0xFF
; 0000 0054 // OC2A output: Non-Inverted PWM
; 0000 0055 // OC2B output: Disconnected
; 0000 0056 // Timer Period: 0,06375 ms
; 0000 0057 // Output Pulse(s):
; 0000 0058 // OC2A Period: 0,06375 ms Width: 0 us
; 0000 0059 ASSR=(0<<EXCLK) | (0<<AS2);
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 005A TCCR2A=(1<<COM2A1) | (0<<COM2A0) | (0<<COM2B1) | (0<<COM2B0) | (0<<WGM21) | (1<<WGM20);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 005B TCCR2B=(0<<WGM22) | (0<<CS22) | (0<<CS21) | (1<<CS20);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 005C TCNT2=0x00;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 005D OCR2A=0x00;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 005E OCR2B=0x00;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 005F 
; 0000 0060 // Timer/Counter 0 Interrupt(s) initialization
; 0000 0061 TIMSK0=(0<<OCIE0B) | (0<<OCIE0A) | (0<<TOIE0);
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0062 
; 0000 0063 // Timer/Counter 1 Interrupt(s) initialization
; 0000 0064 TIMSK1=(0<<ICIE1) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0065 
; 0000 0066 // Timer/Counter 2 Interrupt(s) initialization
; 0000 0067 TIMSK2=(0<<OCIE2B) | (0<<OCIE2A) | (0<<TOIE2);
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0068 
; 0000 0069 // External Interrupt(s) initialization
; 0000 006A // INT0: On
; 0000 006B // INT0 Mode: Rising Edge
; 0000 006C // INT1: Off
; 0000 006D // Interrupt on any change on pins PCINT0-7: Off
; 0000 006E // Interrupt on any change on pins PCINT8-14: Off
; 0000 006F // Interrupt on any change on pins PCINT16-23: Off
; 0000 0070 EICRA=(0<<ISC11) | (0<<ISC10) | (1<<ISC01) | (1<<ISC00);
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0071 EIMSK=(0<<INT1) | (1<<INT0);
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0072 EIFR=(0<<INTF1) | (1<<INTF0);
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0073 PCICR=(0<<PCIE2) | (0<<PCIE1) | (0<<PCIE0);
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0074 
; 0000 0075 // USART initialization
; 0000 0076 // USART disabled
; 0000 0077 UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (0<<RXEN0) | (0<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0078 
; 0000 0079 // Analog Comparator initialization
; 0000 007A // Analog Comparator: Off
; 0000 007B // The Analog Comparator's positive input is
; 0000 007C // connected to the AIN0 pin
; 0000 007D // The Analog Comparator's negative input is
; 0000 007E // connected to the AIN1 pin
; 0000 007F ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0080 ADCSRB=(0<<ACME);
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0081 // Digital input buffer on AIN0: On
; 0000 0082 // Digital input buffer on AIN1: On
; 0000 0083 DIDR1=(0<<AIN0D) | (0<<AIN1D);
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0084 
; 0000 0085 // ADC initialization
; 0000 0086 // ADC disabled
; 0000 0087 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0088 
; 0000 0089 // SPI initialization
; 0000 008A // SPI disabled
; 0000 008B SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 008C 
; 0000 008D // TWI initialization
; 0000 008E // TWI disabled
; 0000 008F TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0090 
; 0000 0091 // Global enable interrupts
; 0000 0092 #asm("sei")
;PCODE: $00000072 VOL: 0
	sei
;PCODE: $00000073 VOL: 0
; 0000 0093 
; 0000 0094 while (1)
;PCODE: $00000074 VOL: 0
; 0000 0095       {
; 0000 0096       // Place your code here
; 0000 0097 
; 0000 0098       }
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0099 }
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
